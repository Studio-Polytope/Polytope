from abc import ABC
from dataclasses import dataclass


@dataclass(kw_only=True)
class ProblemPublicTest:
    """A problem's public test."""

    #: Input data.
    input: str

    output: str
    """Custom output data.

    It may not be correct output.
    """

    #: Whether to verify the output.
    verify_output: bool = False


@dataclass(kw_only=True)
class ProblemTest(ABC):
    """A problem's secret test."""

    _id: str
    """Problem ID.

    * It must be auto-generated by using UUID.
    * It must be read-only.
    """

    # TODO(youngyojun): Define attributes.

    @property
    def id(self) -> str:
        return self._id


@dataclass(kw_only=True)
class ProblemTestRaw(ProblemTest):
    """A text-raw secret test."""

    #: Input data.
    input: str


@dataclass(kw_only=True)
class ProblemTestScript(ProblemTest):
    """A script-based secret test."""

    # TODO(youngyojun): Consider using SourceCode of langauge 'bash'.

    #: Script to generate input data.
    script: str
